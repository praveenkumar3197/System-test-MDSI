{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nexport default function Login() {\n  _s();\n  // States for Login\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [dataInput, setDataInput] = useState(\"\");\n  // States for checking the errors\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(false);\n\n  // Handling the name change\n  const handleName = e => {\n    setName(e.target.value);\n    setSubmitted(false);\n  };\n}\n_s(Login, \"1ANTm2P5Cd6Bk4ZSOrYJCeWCeH4=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Login","email","setEmail","password","setPassword","dataInput","setDataInput","submitted","setSubmitted","error","setError","handleName","e","setName","target","value"],"sources":["/Users/karthik/Documents/MDSI/MDSI_Frontend/mdsi_fornt/src/LoginForm/LoginForm.js"],"sourcesContent":["import React,{useState} from 'react' \n\nexport default function Login(){ \n    // States for Login\n\tconst [email,setEmail]=useState(\"\"); \n\tconst [password,setPassword]=useState(\"\"); \n\tconst[dataInput, setDataInput]=useState(\"\"); \n\t// States for checking the errors\nconst [submitted, setSubmitted] = useState(false);\nconst [error, setError] = useState(false);\n\n// Handling the name change\nconst handleName = (e) => {\n\tsetName(e.target.value);\n\tsetSubmitted(false);\n};\n} "],"mappings":";AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AAEpC,eAAe,SAASC,KAAK,GAAE;EAAA;EAC3B;EACH,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACH,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAM,CAACI,QAAQ,EAACC,WAAW,CAAC,GAACL,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAK,CAACM,SAAS,EAAEC,YAAY,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EAC3C;EACD,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEzC;EACA,MAAMY,UAAU,GAAIC,CAAC,IAAK;IACzBC,OAAO,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;IACvBP,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC;AACD;AAAC,GAduBR,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}