{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/Documents/MDSI/MDSI_Frontend/mdsi_fornt/src/LoginForm/LoginForm.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RegistrationForm() {\n  _s();\n  // States for registration\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  // States for checking the errors\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(false);\n\n  // Handling the email change\n  const handleEmail = e => {\n    setEmail(e.target.value);\n    setSubmitted(false);\n  };\n\n  // Handling the password change\n  const handlePassword = e => {\n    setPassword(e.target.value);\n    setSubmitted(false);\n  };\n\n  // Handling the form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email === '' || password === '') {\n      setError(true);\n    } else {\n      axios.post('./api/users', {\n        name: name,\n        email: email,\n        gander: gander,\n        password: password\n      }).then(res => {\n        const result = res.data;\n        if (result === \"Email already exists\") {\n          setError(true);\n        } else {\n          setSubmitted(true);\n          setError(false);\n        }\n      });\n    }\n  };\n\n  // Showing success message\n  const successMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      style: {\n        display: submitted ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User  successfully registered!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 2\n    }, this);\n  };\n\n  // Showing error message if error is true\n  const errorMessage = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      style: {\n        display: error ? '' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please enter all the fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 2\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"User Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [errorMessage(), successMessage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 2\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleEmail,\n        className: \"input\",\n        value: email,\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handlePassword,\n        className: \"input\",\n        value: password,\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        className: \"btn\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 2\n  }, this);\n}\n_s(RegistrationForm, \"Ph0Kfy3g0hXXmfIT0mpV7fK8P9M=\");\n_c = RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["axios","useState","RegistrationForm","email","setEmail","password","setPassword","submitted","setSubmitted","error","setError","handleEmail","e","target","value","handlePassword","handleSubmit","preventDefault","post","name","gander","then","res","result","data","successMessage","display","errorMessage"],"sources":["/Users/karthik/Documents/MDSI/MDSI_Frontend/mdsi_fornt/src/LoginForm/LoginForm.js"],"sourcesContent":["import  axios  from 'axios';\nimport { useState } from 'react';\n\nexport default function RegistrationForm() {\n\n// States for registration\nconst [email, setEmail] = useState('');\nconst [password, setPassword] = useState('');\n\n// States for checking the errors\nconst [submitted, setSubmitted] = useState(false);\nconst [error, setError] = useState(false);\n\n// Handling the email change\nconst handleEmail = (e) => {\n\tsetEmail(e.target.value);\n\tsetSubmitted(false);\n};\n\n // Handling the password change\n const handlePassword = (e) => {\n    setPassword(e.target.value);\n    setSubmitted(false);\n  };\n\n// Handling the form submission\nconst handleSubmit = (e) => {\n\te.preventDefault();\n\tif (email === ''|| password === '') {\n\tsetError(true);\n\t} else {\n        axios.post('./api/users',{\n            name: name,\n            email: email,\n            gander: gander,\n            password: password  \n        })\n        .then( res => {\n            const result = res.data;\n            if(result === \"Email already exists\"){\n                setError(true);\n            }\n            else{\n                setSubmitted(true);\n\t            setError(false);\n            }\n        })\n\t}\n};\n\n// Showing success message\nconst successMessage = () => {\n\treturn (\n\t<div\n\t\tclassName=\"success\"\n\t\tstyle={{\n\t\tdisplay: submitted ? '' : 'none',\n\t\t}}>\n\t\t<h1>User  successfully registered!!</h1>\n\t</div>\n\t);\n};\n\n// Showing error message if error is true\nconst errorMessage = () => {\n\treturn (\n\t<div\n\t\tclassName=\"error\"\n\t\tstyle={{\n\t\tdisplay: error ? '' : 'none',\n\t\t}}>\n\t\t<h1>Please enter all the fields</h1>\n\t</div>\n\t);\n};\n\nreturn (\n\t<div className=\"form\">\n\t<div>\n\t\t<h1>User Registration</h1>\n\t</div>\n\n\t{/* Calling to the methods */}\n\t<div className=\"messages\">\n\t\t{errorMessage()}\n\t\t{successMessage()}\n\t</div>\n\n\t<form>\n\t\t{/* Labels and inputs for form data */}\n\t\t\n\n\t\t<label className=\"label\">Email</label>\n\t\t<input onChange={handleEmail} className=\"input\"\n\t\tvalue={email} type=\"email\" />\n\n        <label className=\"label\">Password</label>\n        <input onChange={handlePassword} className=\"input\"\n          value={password} type=\"password\" />\n\n\t\t<button onClick={handleSubmit} className=\"btn\" type=\"submit\">\n\t\tSubmit\n\t\t</button>\n\t</form>\n\t</div>\n);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}