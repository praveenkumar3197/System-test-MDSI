{"ast":null,"code":"var _jsxFileName = \"/Users/karthik/Documents/MDSI/MDSI_Frontend/mdsi_fornt/src/RegistrationForm/RegistrationForm.js\";\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegistrationForm() {\n  // // States for registration\n  // const [name, setName] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [gender, setGender] = useState('');\n  // const [password, setPassword] = useState('');\n\n  // // States for checking the errors\n  // const [submitted, setSubmitted] = useState(false);\n  // const [error, setError] = useState(false);\n\n  // // Handling the name change\n  // const handleName = (e) => {\n  // \tsetName(e.target.value);\n  // \tsetSubmitted(false);\n  // };\n\n  // // Handling the email change\n  // const handleEmail = (e) => {\n  // \tsetEmail(e.target.value);\n  // \tsetSubmitted(false);\n  // };\n\n  // // Handling the gender change\n  // const handleGender = (e) => {\n  // \tsetGender(e.target.value);\n  // \tsetSubmitted(false);\n  // };\n\n  //  // Handling the password change\n  //  const handlePassword = (e) => {\n  //     setPassword(e.target.value);\n  //     setSubmitted(false);\n  //   };\n\n  // // Handling the form submission\n  // const handleSubmit = (e) => {\n  // \te.preventDefault();\n  // \tif (name === '' || email === '' || gender === '' || password === '') {\n  // \tsetError(true);\n  // \t} else {\n  //         axios.post('./api/users',{\n  //             name: name,\n  //             email: email,\n  //             gender: gender,\n  //             password: password  \n  //         })\n  //         .then( res => {\n  //             const result = res.data;\n  //             if(result === \"Email already exists\"){\n  //                 setError(false);\n  //             }\n  //             else{\n  //                 setSubmitted(true);\n  // \t            setError(false);\n  //             }\n  //         })\n  // \t}\n  // };\n\n  // // Showing success message\n  // const successMessage = () => {\n  // \treturn (\n  // \t<div\n  // \t\tclassName=\"success\"\n  // \t\tstyle={{\n  // \t\tdisplay: submitted ? '' : 'none',\n  // \t\t}}>\n  // \t\t<h1>User {name} successfully registered!!</h1>\n  // \t</div>\n  // \t);\n  // };\n\n  // // Showing error message if error is true\n  // const errorMessage = () => {\n  // \treturn (\n  // \t<div\n  // \t\tclassName=\"error\"\n  // \t\tstyle={{\n  // \t\tdisplay: error ? '' : 'none',\n  // \t\t}}>\n  // \t\t<h1>Please enter all the fields</h1>\n  // \t</div>\n  // \t);\n  // };\n\n  return (\n    /*#__PURE__*/\n    // <div className=\"form\">\n    // <div>\n    // \t<h1>User Registration</h1>\n    // </div>\n    // {/* Calling to the methods */}\n    // <div className=\"messages\">\n    // \t{errorMessage()}\n    // \t{successMessage()}\n    // </div>\n    // <form>\n    // \t{/* Labels and inputs for form data */}\n    // \t<label className=\"label\">Name</label>\n    // \t<input onChange={handleName} className=\"input\"\n    // \tvalue={name} type=\"text\" />\n    // \t<label className=\"label\">Email</label>\n    // \t<input onChange={handleEmail} className=\"input\"\n    // \tvalue={email} type=\"email\" />\n    // \t<label className=\"label\">Gender</label>\n    // \t<input onChange={handleGender} className=\"input\"\n    // \tvalue={gender} type=\"text\" />\n    //     <label className=\"label\">Password</label>\n    //     <input onChange={handlePassword} className=\"input\"\n    //       value={password} type=\"password\" />\n    // \t<button onClick={handleSubmit} className=\"btn\" type=\"submit\">\n    // \tSubmit\n    // \t</button>\n    // </form>\n    // </div>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"HI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this)\n  );\n}\n_c = RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["axios","React","useState","RegistrationForm"],"sources":["/Users/karthik/Documents/MDSI/MDSI_Frontend/mdsi_fornt/src/RegistrationForm/RegistrationForm.js"],"sourcesContent":["import  axios  from 'axios';\nimport React,{ useState } from 'react';\n\nfunction RegistrationForm() {\n\n// // States for registration\n// const [name, setName] = useState('');\n// const [email, setEmail] = useState('');\n// const [gender, setGender] = useState('');\n// const [password, setPassword] = useState('');\n\n// // States for checking the errors\n// const [submitted, setSubmitted] = useState(false);\n// const [error, setError] = useState(false);\n\n// // Handling the name change\n// const handleName = (e) => {\n// \tsetName(e.target.value);\n// \tsetSubmitted(false);\n// };\n\n// // Handling the email change\n// const handleEmail = (e) => {\n// \tsetEmail(e.target.value);\n// \tsetSubmitted(false);\n// };\n\n// // Handling the gender change\n// const handleGender = (e) => {\n// \tsetGender(e.target.value);\n// \tsetSubmitted(false);\n// };\n\n//  // Handling the password change\n//  const handlePassword = (e) => {\n//     setPassword(e.target.value);\n//     setSubmitted(false);\n//   };\n\n// // Handling the form submission\n// const handleSubmit = (e) => {\n// \te.preventDefault();\n// \tif (name === '' || email === '' || gender === '' || password === '') {\n// \tsetError(true);\n// \t} else {\n//         axios.post('./api/users',{\n//             name: name,\n//             email: email,\n//             gender: gender,\n//             password: password  \n//         })\n//         .then( res => {\n//             const result = res.data;\n//             if(result === \"Email already exists\"){\n//                 setError(false);\n//             }\n//             else{\n//                 setSubmitted(true);\n// \t            setError(false);\n//             }\n//         })\n// \t}\n// };\n\n// // Showing success message\n// const successMessage = () => {\n// \treturn (\n// \t<div\n// \t\tclassName=\"success\"\n// \t\tstyle={{\n// \t\tdisplay: submitted ? '' : 'none',\n// \t\t}}>\n// \t\t<h1>User {name} successfully registered!!</h1>\n// \t</div>\n// \t);\n// };\n\n// // Showing error message if error is true\n// const errorMessage = () => {\n// \treturn (\n// \t<div\n// \t\tclassName=\"error\"\n// \t\tstyle={{\n// \t\tdisplay: error ? '' : 'none',\n// \t\t}}>\n// \t\t<h1>Please enter all the fields</h1>\n// \t</div>\n// \t);\n// };\n\nreturn (\n\t// <div className=\"form\">\n\t// <div>\n\t// \t<h1>User Registration</h1>\n\t// </div>\n\n\t// {/* Calling to the methods */}\n\t// <div className=\"messages\">\n\t// \t{errorMessage()}\n\t// \t{successMessage()}\n\t// </div>\n\n\t// <form>\n\t// \t{/* Labels and inputs for form data */}\n\t// \t<label className=\"label\">Name</label>\n\t// \t<input onChange={handleName} className=\"input\"\n\t// \tvalue={name} type=\"text\" />\n\n\t// \t<label className=\"label\">Email</label>\n\t// \t<input onChange={handleEmail} className=\"input\"\n\t// \tvalue={email} type=\"email\" />\n\n\t// \t<label className=\"label\">Gender</label>\n\t// \t<input onChange={handleGender} className=\"input\"\n\t// \tvalue={gender} type=\"text\" />\n\n    //     <label className=\"label\">Password</label>\n    //     <input onChange={handlePassword} className=\"input\"\n    //       value={password} type=\"password\" />\n\n\t// \t<button onClick={handleSubmit} className=\"btn\" type=\"submit\">\n\t// \tSubmit\n\t// \t</button>\n\t// </form>\n\t// </div>\n    <div><p>HI</p></div>\n);\n}\n"],"mappings":";AAAA,OAAQA,KAAK,MAAO,OAAO;AAC3B,OAAOC,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AAAC;AAEvC,SAASC,gBAAgB,GAAG;EAE5B;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;IAAA;IACC;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEG;IACA;IACA;IAEH;IACA;IACA;IACA;IACA;IACG;MAAA,uBAAK;QAAA,UAAG;MAAE;QAAA;QAAA;QAAA;MAAA;IAAI;MAAA;MAAA;MAAA;IAAA;EAAM;AAExB;AAAC,KA5HQA,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}